clear checkout directory,shell,"if [ ""$CHECKOUT_DIR"" = """" ]; then
   echo ""checkout dir not set!""
else
   rm -rf $CHECKOUT_DIR
fi",clear the checkout directory so we can do a fresh checkout
git archive,shell,"if [ ""$ROLLBACK_URL"" = """" ]; then
  cd $CHECKOUT_DIR
  cd ..
  rmdir $CHECKOUT_DIR
  git clone --depth=1 $GIT_REMOTE $CHECKOUT_DIR
else
  cd $CHECKOUT_DIR; git archive --remote=$GIT_REMOTE $ROLLBACK_URL |tar -x
fi","""checkout"" a version of the code from git. pulls down just the code and not the entire history. equivalent of ""svn checkout"" recipe"
rsync --delete,shell,/usr/bin/rsync -a -z -C --delete --verbose $CHECKOUT_DIR/ $REMOTE_HOST:$REMOTE_DIRECTORY,"rsync with a --delete flag. Be careful with this - if your app writes any user data or temp files or anything to the app directory, this will delete them and things will go all splodey. requires CHECKOUT_DIR, REMOTE_HOST, and REMOTE_DIRECTORY variables."
virtualenv bootstrap,shell,"ssh $REMOTE_HOST ""cd ${REMOTE_DIRECTORY}; ./bootstrap.py""",requires REMOTE_HOST and REMOTE_DIRECTORY variables
touch wsgi,shell,ssh $REMOTE_HOST touch ${REMOTE_DIRECTORY}/apache/django.wsgi ,touch the wsgi file to make apache restart the daemon
git tag,shell,"if [ ""$ROLLBACK_URL"" = """" ]; then
  cd $CHECKOUT_DIR; git config user.email ""ccnmtl-pusher@columbia.edu""
  cd $CHECKOUT_DIR; git config user.name ""CCNMTL Pusher""
  cd $CHECKOUT_DIR; git tag ROLF_PUSH_${ROLF_PUSH_ID} -m ""tagged for push by ${PUSH_UNI}: ${PUSH_COMMENT}""
  cd $CHECKOUT_DIR; git push --tags
fi",
save git rollback_url,python,"# it was easiest to do this as a separate step
self.push.rollback_url = ""ROLLO_PUSH_%d"" % self.push.id
self.push.save()
self.status = ""ok""",to allow rollbacks

